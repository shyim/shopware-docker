#!/usr/bin/env bash

export COMPOSE_PROJECT_NAME="shopware-docker"
export DOCKER_COMPOSE_FILE="/tmp/swdc-docker-compose.yml";

FILE="$0"

if [[ -L "$0" ]]; then
  FILE="$(readlink ${0})"
fi

DIR="$(dirname ${FILE})"
export DIR="${DIR}"
export REALDIR=$(realpath ${DIR})
source "${DIR}/functions.sh"

if [[ ! -d "${HOME}/.config/swdc" ]]; then
  mkdir -p "${HOME}/.config/swdc"
fi

if [[ -f "${HOME}/.swdc_env" ]]; then
  mv "${HOME}/.swdc_env" "${HOME}/.config/swdc/env"
else
  cp "${DIR}/.env.dist" "${HOME}/.config/swdc/env"
fi

source "${DIR}/.env.dist"
source "${HOME}/.config/swdc/env"
source "${DIR}/docker.env"

if [[ ! -d "${HOME}/.config/swdc/ssl" ]]; then
  mkdir -p "${HOME}/.config/swdc/ssl"
  generate_wildcard_certs
fi

check_env_compability

SHOPWARE_PROJECT="$2"
SHOPWARE_FOLDER="${CODE_DIRECTORY}/$SHOPWARE_PROJECT"

# Need to be in docker folder for docker-compose
cd "${DIR}"

modules=(base)

if [[ -f "${CODE_DIRECTORY}/${2}/src/Kernel.php" ]]; then
  modules=(base platform-local)
fi

if [[ "${1}" == "" ]];
then
  source modules/base/command-list.sh
  exit "1"
fi

for module in ${modules[@]}; do
  if [[ -f "./modules/${module}/${1}.sh" ]]; then
    source "./modules/${module}/${1}.sh"
    exit 0
  fi
done

compose exec cli bash /opt/swdc/swdc-inside "$@"
